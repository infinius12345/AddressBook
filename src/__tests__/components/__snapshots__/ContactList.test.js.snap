// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactList renders correctly after Query 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Contact
    contacts={
      Array [
        Object {
          "firstName": "Hello",
          "lastName": "No",
        },
        Object {
          "firstName": "Yes",
          "lastName": "text",
        },
      ]
    }
    contactsQuery={
      Object {
        "loading": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          autoFocus={true}
          className="search"
          onChange={[Function]}
          placeholder="Search using 'FirstName LastName'"
          type="text"
          value=""
        />,
        Array [
          <div
            className="contactwrapper"
          >
            <Link
              className="list"
              replace={false}
              to="/contact/undefined"
            >
              No
              ,
              Hello
            </Link>
          </div>,
          <div
            className="contactwrapper"
          >
            <Link
              className="list"
              replace={false}
              to="/contact/undefined"
            >
              text
              ,
              Yes
            </Link>
          </div>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoFocus": true,
          "className": "search",
          "onChange": [Function],
          "placeholder": "Search using 'FirstName LastName'",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="list"
            replace={false}
            to="/contact/undefined"
          >
            No
            ,
            Hello
          </Link>,
          "className": "contactwrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "No",
              ",",
              "Hello",
            ],
            "className": "list",
            "replace": false,
            "to": "/contact/undefined",
          },
          "ref": null,
          "rendered": Array [
            "No",
            ",",
            "Hello",
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="list"
            replace={false}
            to="/contact/undefined"
          >
            text
            ,
            Yes
          </Link>,
          "className": "contactwrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "text",
              ",",
              "Yes",
            ],
            "className": "list",
            "replace": false,
            "to": "/contact/undefined",
          },
          "ref": null,
          "rendered": Array [
            "text",
            ",",
            "Yes",
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            autoFocus={true}
            className="search"
            onChange={[Function]}
            placeholder="Search using 'FirstName LastName'"
            type="text"
            value=""
          />,
          Array [
            <div
              className="contactwrapper"
            >
              <Link
                className="list"
                replace={false}
                to="/contact/undefined"
              >
                No
                ,
                Hello
              </Link>
            </div>,
            <div
              className="contactwrapper"
            >
              <Link
                className="list"
                replace={false}
                to="/contact/undefined"
              >
                text
                ,
                Yes
              </Link>
            </div>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoFocus": true,
            "className": "search",
            "onChange": [Function],
            "placeholder": "Search using 'FirstName LastName'",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="list"
              replace={false}
              to="/contact/undefined"
            >
              No
              ,
              Hello
            </Link>,
            "className": "contactwrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "No",
                ",",
                "Hello",
              ],
              "className": "list",
              "replace": false,
              "to": "/contact/undefined",
            },
            "ref": null,
            "rendered": Array [
              "No",
              ",",
              "Hello",
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="list"
              replace={false}
              to="/contact/undefined"
            >
              text
              ,
              Yes
            </Link>,
            "className": "contactwrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "text",
                ",",
                "Yes",
              ],
              "className": "list",
              "replace": false,
              "to": "/contact/undefined",
            },
            "ref": null,
            "rendered": Array [
              "text",
              ",",
              "Yes",
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
